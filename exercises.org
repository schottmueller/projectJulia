#+Title: Exercises
* Week 2
1. Type the following code into the REPL
#+begin_src julia
  var1 = "a"
  var2 = 'b'
#+end_src
What does the code do? Which of the following lines of code are valid and which will give you an error? First think what you expect to happen and then check.
#+begin_src julia
  var1+var2

  var1*var2

  var1+1

  var2+1

  var1*1

  var2*1

  var1^3

  var2^3

  var1 < "c"

  var1 < 'c'

  var2 > 'c'

  var1*"1+$var2"

  var1*"$(1+var2)"

  "var1*$(var2)"

  "$(var1)*$(var2)"

  length(var1)+2

  length(var2)+3
#+end_src

2. Create an array that contains all the lower case characters of the alphabet. (/Hint:/ Recall that /'a'+0='a'/, /'a'+1='b'/, /'a'+2='c'/ etc.) and bind this array to the variable name /alphabet/. Then create a single string that contains all the letters of the alphabet and bind it to the name /alphabetstring/. Also create another string variable /alphabetcomma/ that contains all letters of the alphabet separated by comma.
# #+begin_src julia
#  # alphabet = ['a'+i for i in 0:25]
#  # alphabetstring = join(alphabet)
#  # alphabetstring = join(alphabet, ", ")
# #+end_src
Next create an array that contains the string "letter number 1 in the alphabet is a" as first element, the string "letter number 2 in the alphabet is b" as its second element and so on until "letter number 26 in the alphabet is z".
# #+begin_src julia
# # ["letter number $(i) in the alphabet is $(alphabet[i])" for i in 1:26]
# #+end_src

3. Use the /string/ function with the keyword /pad/ as well as an array and the /join/ function to create a string "101001000100001000001000000100000001".
#   #+begin_src julia
# join([string(1;pad=i) for i in 1:7])
#    #+end_src
