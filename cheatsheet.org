* julia commands

| command                                              | explanation                                                                                                                                                                          |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Week 1                                               |                                                                                                                                                                                      |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| using Pkg                                            | loads package Pkg                                                                                                                                                                    |
| Pkg.add("IJulia")                                    | downloads package IJulia                                                                                                                                                             |
| notebook()                                           | starts Jupyter notebook (works only after IJulia is loaded)                                                                                                                          |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Week 2                                               |                                                                                                                                                                                      |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| x= "Hello"                                           | assignment: binds the variable name "x" to the string value "Hello"                                                                                                                  |
| println(x)                                           | fetches the value of variable x, formats it and displays it on screen                                                                                                                |
| include("myfile.jl")                                 | runs the code in the file myfile.jl                                                                                                                                                  |
| !                                                    | logical not                                                                                                                                                                          |
| \vert\vert                                           | logical or                                                                                                                                                                           |
| &&                                                   | logical and                                                                                                                                                                          |
| string1*string2                                      | concatenates the two strings                                                                                                                                                         |
| string1^3                                            | creates a string consisting of 3 repetitions of string1                                                                                                                              |
| 'a'+1                                                | gives 'b', i.e. arithmetic works on characters                                                                                                                                       |
| "it is \$ $(price*1.1)"                              | substitutes the value of the expression in parentheses into the string                                                                                                               |
| "line 1 \n line 2"                                   | \n is the symbol for newline                                                                                                                                                         |
| "text \t more text"                                  | \t inserts whitespaces until the next tab                                                                                                                                            |
| "text \\ text"                                       | \\ inserts one backslash in the string                                                                                                                                               |
| string1[3]                                           | returns the third character in string1 (more precisely, the character starting at codeunit 3 if non-standard characters are used)                                                    |
| string1[3:5]                                         | returns characters 3 to 5 in string1                                                                                                                                                 |
| length(string1)                                      | number of characters in string1                                                                                                                                                      |
| ncodeunits("Ã¦")                                      | is 2 as non-standard characters might need two codeunits to be stored                                                                                                                |
| [char for char in string1]                           | gives an array containing the characters in string1 as its elements                                                                                                                  |
| string(string1,string2,string3)                      | creates a new string that is the concatenation of string1, string2, string3                                                                                                          |
| string(19)                                           | creates the string "19"                                                                                                                                                              |
| string(13;base=3,pad=4)                              | creates the string  "0010" as 3 is 10 in base 3 and padding ensures that the result is expressed in at least 4 digits                                                                |
| join(stringarray)                                    | creates a single string from all the elements of the array stringarray (or any other iterable object, like e.g.  1:4, of this name)                                                  |
| join(stringarray,delim,last)                         | creates a single string from all the elements of the array stringarray inserting delim between the strings and last instead of delim between last and second but last element        |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Week 3                                               |                                                                                                                                                                                      |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Int32(21)                                            | creates the number 21 as Int32                                                                                                                                                       |
| function f(input) return 1 end                       | function definition of the constant function 1 (without return keyword, the last calculated value is returned)                                                                       |
| f(x)=3                                               | alternative function definition                                                                                                                                                      |
| f(x::String)="3"                                     | specifying the type of the input gives a specialized version of the function that has priority if the input is of this type                                                          |
| methods(f)                                           | lists all the methods of function f                                                                                                                                                  |
| supertype(type)                                      | returns the type above in the type tree                                                                                                                                              |
| subtypes(type)                                       | returns a vector of subtypes of type                                                                                                                                                 |
| global x = 3                                         | binds the variable name x to the value 3 in global scope, e.g. outside of current function (note that /elements/ of arrays can be manipulated inside functions without using global) |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Week 4                                               |                                                                                                                                                                                      |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| x==3                                                 | equality tests returning true if x is 3 and false otherwise                                                                                                                          |
| if (x>1) body end                                    | body is executed if x>1 and nothing happens otherwise                                                                                                                                |
| if (x>1) body1 else body2 end                        | body1 is executed if x>1 and body2 otherwise                                                                                                                                         |
| if (x>1) body1 elseif (x<-1) body2 else body3 end    |                                                                                                                                                                                      |
| while (x<5) body end                                 | executes body repeatedly as long as x<5 (body should change the value of x!)                                                                                                         |
| push!(myarray,newelement)                            | modifies myarray by adding newelement as new last element                                                                                                                            |
| for x in iterable body end                           | executes body for each value in iterable (e.g. an array or a range)                                                                                                                  |
| map(x-> x^2,1:4)                                     | applies the function x^2 to each x in the range (alternatively: to each x in an array. however, strings are not allowed) and returns a vector with the results                       |
| filter(x-> x<3,[1,2,4,1])                            | returns the vector [1,2,1], i.e. it filters out all elements for which the function returns false                                                                                    |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Week 5                                               |                                                                                                                                                                                      |
|------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| fh=open(filename,"r") x=read(fh,String) close(fh)    | creates a connection fh to a file, reads the whole text of the file as one String bound to x, closes the connection                                                                  |
| fh=open(filename,"w") x=write(fh,"blabla") close(fh) | opens a connection to an existing or new file and writes "blabla" into it; note that an existing file is overwritten!                                                                |
| fh=open(filename,"a") x=write(fh,"blabla") close(fh) | appends the string "blabla" to an existing textfile                                                                                                                                  |
| filter!(x-> !isempty(x),myarray)                     | removes empty elements from myarray                                                                                                                                                  |
| split("aa.bb",".")                                   | returns a vector of substrings with "aa" as first and "bb" as second element; default delimiter is isspace                                                                           |
| rand([true, false,false])                            | returns draw from a random variable that is true with prob 1/3 and false with prob 2/3                                                                                         |


* packages
| package/command                                                                                               | explanation                                                                                                        | week |
|---------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+------|
| IJulia                                                                                                        |                                                                                                                    |      |
| notebook()                                                                                                    | starts Jupyter notebook server                                                                                     |    1 |
|---------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+------|
| Plots                                                                                                         |                                                                                                                    |      |
| plot([1,2,3],[1,4,9])                                                                                         | plots a line through the points (1,1),(2,4),(3,9)                                                                  |    1 |
| plot(f,-2,2,label="quadratic function",xlabel="x",ylabel="y",linewidth=2)                                     | plot function f in domain [-2,2]                                                                                   |    5 |
| plot([f, h],-2:0.01:2,label=["quadratic" "linear"],xlabel="x",ylabel="y",ylim=(0,4),linestyle=[:solid :dash]) | plot two functions f and h with different linestyles                                                               |    5 |
| plot(f,-2,2,label="",xlabel="x",ylabel="y",ylim=(0,4),grid=false)                                             | no label for f and no gridlines, y-axis ranges from 0 to 4                                                         |    5 |
| savefig("testFigure.pdf")                                                                                     | saves the last created plot as testFigure.pdf                                                                      |    5 |
|---------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+------|
| LaTeXStrings                                                                                                  |                                                                                                                    |      |
| plot(f,-2,2,label=L"function $f(\theta)=\theta^2$",xlabel=L"$\theta$")                                        | use LaTeX commands to annotate plots                                                                               |    5 |
|---------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------+------|
| Optim                                                                                                         |                                                                                                                    |      |
| optimize(f,-5,5)                                                                                              | minimzes f on [-5,5]                                                                                               |    5 |
| optimize(h,[0.0,0.0])                                                                                         | minimizes h which takes a 2-dimensional array as input with starting point [0.0,0.0]                               |    5 |
| optimize(h,[0.0,-2.0],[0.5,1.0],[0.2,0.0],Fminbox())                                                          | minimization with domain restrictions: x[1] is in [0.0,0.5] and x[2] is in [-2.0,1.0]; starting value is [0.2,0.0] |    5 |
| res = optimize(f,-5,5);  x,y = Optim.minimizer(res), Optim.minimum(res)                                       | obtaining argmin and minimum from a minimization problem and binding x and y to these values                       |    5 |
|                                                                                                               |                                                                                                                    |      |
